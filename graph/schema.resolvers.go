package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"

	"github.com/nxtCoder36/graphql-golang-client/graph/model"
)

// AddTodoItem is the resolver for the addTodoItem field.

func (r *mutationResolver) AddTodoItem(ctx context.Context, title string) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: AddTodoItem - addTodoItem"))
}

// UpdateTodoItem is the resolver for the updateTodoItem field.
func (r *mutationResolver) UpdateTodoItem(ctx context.Context, id int, title *string, completed *bool) (*bool, error) {
	panic(fmt.Errorf("not implemented: UpdateTodoItem - updateTodoItem"))
}

// DeleteTodoItem is the resolver for the deleteTodoItem field.
func (r *mutationResolver) DeleteTodoItem(ctx context.Context, id int) (*bool, error) {
	panic(fmt.Errorf("not implemented: DeleteTodoItem - deleteTodoItem"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}

// TodoByID is the resolver for the todoByID field.
func (r *queryResolver) TodoByID(ctx context.Context, id int) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: TodoByID - todoByID"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
